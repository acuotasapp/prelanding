---
import type { CollectionEntry } from 'astro:content';

import { ResellerRepository } from '@/repositories/static/ResellerRepository';
import { EventRepository } from '@/repositories/static/EventRepository';

import Event from '@/models/Event';
import Reseller from '@/models/Reseller';

import ResellerLayout from '@/layouts/ResellerLayout.astro';

import Events from '@/components/Events.astro';
import Hero from '@/components/Hero.astro';
import Whatsapp from '@/components/Whatsapp.astro';

const resellerRepository = new ResellerRepository();
const eventRepository = new EventRepository();

export function getStaticPaths(): Record<string, any> {
  const resellerRepository = new ResellerRepository();

  const filterAvaliableVendors = (reseller: CollectionEntry<'reseller'>) => {
    return reseller.data.available;
  };

  return resellerRepository.getCollection(filterAvaliableVendors).then((resellers: Reseller[]) => {
    const ids: string[] = resellers.map((reseller: Reseller): string => reseller.getId());

    return ids.map((id: string): Record<string, any> => ({ params: { slug: id } }));
  });
}

const { slug: resellerId } = Astro.params;

const reseller: Reseller = await resellerRepository.getEntry(resellerId);
const events: Event[] = await eventRepository.getEntries(reseller.getEvents());
---

<ResellerLayout reseller={reseller}>
  <Hero reseller={reseller} />
  <Events events={events} reseller={reseller} />
  <Whatsapp reseller={reseller} />
</ResellerLayout>

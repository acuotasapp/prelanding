---
import Isotype from '@/assets/iso-blanco.svg';
import { CollectionEntry } from 'astro:content';
import Modal from './Modal.astro';
import Button from './Button.vue';
import { BtnDecorator } from '@/utils/payment/BtnDecorator';
import { AstroComponentInstance } from 'astro/dist/runtime/server';

const { event, reseller, style } = Astro.props as {
	event: CollectionEntry<'event'>;
	reseller?: CollectionEntry<'reseller'>;
	style: 'primary' | 'secondary';
};

const { id, installmentAmount, installments, termsAndConditions } = event.data as {
	id: string;
	installmentAmount: number;
	installments: number;
	termsAndConditions: string;
};

const modalId = `${id}-terms-and-conditions-modal`;

const buttonDecorator = new BtnDecorator(
	'#',
	event.data.installmentAmount,
	reseller?.data?.id,
	false,
	'installment',
	style,
);
const Icons = import.meta.glob('@/assets/**/*.svg');
const IconSrc = Object.keys(Icons).find((src) => src.includes(buttonDecorator.getIcon())) as string;
const IconRef = (await Icons[IconSrc]()) as { default: any };
const Icon = IconRef.default;
---

<section id="event-actions" class="gap-4 items-start">
	<button
		data-modal-target={modalId}
		data-modal-toggle={modalId}
		class={buttonDecorator.getBtnStyle()}
		type="button"
	>
		<Icon class="h-5" />
		{buttonDecorator.getButtonText()}
	</button>

	<Modal {installmentAmount} {id} {installments} {termsAndConditions}>
		<Button client:load event={event} reseller={reseller} style="primary" type="installment" />
	</Modal>
</section>
